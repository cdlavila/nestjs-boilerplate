version: '3.8'

services:
  postgres:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER_DEV}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD_DEV}
      POSTGRES_DB: ${DATABASE_NAME_DEV}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - nestjs-boilerplate # change this to your project name
  nestjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_HOST_DEV: postgres
      DATABASE_PORT_DEV: ${DATABASE_PORT_DEV}
      DATABASE_NAME_DEV: ${DATABASE_NAME_DEV}
      DATABASE_USER_DEV: ${DATABASE_USER_DEV}
      DATABASE_PASSWORD_DEV: ${DATABASE_PASSWORD_DEV}
      DATABASE_HOST_TEST: postgres
      DATABASE_PORT_TEST: ${DATABASE_PORT_TEST}
      DATABASE_NAME_TEST: ${DATABASE_NAME_TEST}
      DATABASE_USER_TEST: ${DATABASE_USER_TEST}
      DATABASE_PASSWORD_TEST: ${DATABASE_PASSWORD_TEST}
      DATABASE_HOST_PROD: ${DATABASE_HOST_PROD}
      DATABASE_PORT_PROD: ${DATABASE_PORT_PROD}
      DATABASE_NAME_PROD: ${DATABASE_NAME_PROD}
      DATABASE_USER_PROD: ${DATABASE_USER_PROD}
      DATABASE_PASSWORD_PROD: ${DATABASE_PASSWORD_PROD}
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    networks:
      - nestjs-boilerplate # change this to your project name

networks:
  nestjs-boilerplate: # change this to your project name
    driver: bridge

# COMMANDS: docker-compose up -d, docker-compose down
